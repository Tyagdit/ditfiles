# tmux 3.1c

# ---------------------------------------------------------------------------------------------------------------------
#                                  General Options
# ---------------------------------------------------------------------------------------------------------------------

# make colors work (https://github.com/tmux/tmux/issues/1246)
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

set-option -g focus-events on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 0

# increase amount of time messages and pane indicators are shown
set -g display-time 2000
set -g display-panes-time 3000

# Change how fast status line is updated
set -g status-interval 1
set -g status-position top

set -g history-limit 9000

set -g mouse on

set -g set-clipboard external

# start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# renumber windows when one is removed
set -g renumber-windows on


# ---------------------------------------------------------------------------------------------------------------------
#                                  Key Bindings
# ---------------------------------------------------------------------------------------------------------------------

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# create new window in the same directory
bind c new-window -c '#{pane_current_path}'

# switch windows using Ctrl-arrows without prefix
bind -n C-Left select-window -p
bind -n C-Right select-window -n

# split windows
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind S split-window -vf -c '#{pane_current_path}'
bind V split-window -hf -c '#{pane_current_path}'

# switch panes using Alt-arrows without prefix and between vim splits too
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-Left' if-shell "$is_vim" 'send-keys M-Left'  'select-pane -L'
bind-key -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down'  'select-pane -D'
bind-key -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up'  'select-pane -U'
bind-key -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right'  'select-pane -R'
bind-key -T copy-mode-vi 'M-Left' select-pane -L
bind-key -T copy-mode-vi 'M-Down' select-pane -D
bind-key -T copy-mode-vi 'M-Up' select-pane -U
bind-key -T copy-mode-vi 'M-Right' select-pane -R

# Switch Sessions
bind Tab choose-session

bind -T copy-mode-vi v send-keys -X begin-selection

# disable auto copy on mouse drag in copy mode
# unbind -T copy-mode-vi MouseDragEnd1Pane
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection\; send-keys -X cancel

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
# bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'

# reload tmux config
bind r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display "tmux configs reloaded"


# ---------------------------------------------------------------------------------------------------------------------
#                                  Theming
# ---------------------------------------------------------------------------------------------------------------------

# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters

# -- Catppuccin
thm_bg="#1e1e28"
thm_fg="#dadae8"
thm_cyan="#c2e7f0"
thm_black="#15121c"
thm_gray="#332e41"
thm_magenta="#c6aae8"
thm_pink="#e5b4e2"
thm_red="#e38c8f"
thm_green="#b1e3ad"
thm_yellow="#ebddaa"
thm_blue="#a4b9ef"
thm_orange="#f9c096"
thm_black4="#575268"

# status
set -g status-position top
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"

# panes
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_blue}"

# windows
setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none

# -------- Statusline

set -g status-left ""
set -g status-right "#[fg=$thm_pink,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_pink,nobold,nounderscore,noitalics]#[fg=$thm_fg,bg=$thm_gray] %b %d #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_gray]‚ñè#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg]#[fg=$thm_fg,bg=$thm_gray]%I:%M "

setw -g window-status-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_fg,bg=$thm_gray] #W "
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_fg,bg=$thm_bg] #W "

# parent_dir/current_dir
# setw -g window-status-format "#[fg=colour232,bg=colour111] #I #[fg=colour222,bg=colour235] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "
# setw -g window-status-current-format "#[fg=colour232,bg=colour208] #I #[fg=colour255,bg=colour237] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "

# -------- Modes
set -g clock-mode-style 12
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black4} bold"

# ---------------------------------------------------------------------------------------------------------------------
#                                  Plugins
# ---------------------------------------------------------------------------------------------------------------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir '$HOME/.local/state/tmux/resurrect' # env vars dont work here ($XDG_STATE_HOME)
set -g @resurrect-capture-pane-contents 'on'

run "$XDG_DATA_HOME/tmux/plugins/tpm/tpm"
